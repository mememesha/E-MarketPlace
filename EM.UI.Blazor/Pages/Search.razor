@page "/search"

@using EM.UI.Blazor.Services
@using EM.Dto

@inject SearchService _searchService

@implements IDisposable

@attribute [AllowAnonymous]

<div class="container">

    @if (_response == null)
    {
        <div class="d-flex align-content-center justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Ищу...</span>
            </div>
        </div>
    }
    else
    {
        <OffersColums Header="@("Результаты поиска по запросу: " + _searchService.Query)" Offers="@_response"
        EmptyMessage="Ничего не найдено. Сорян =(" />
    }
</div>

@code {
    private List<OfferShortResponseDto>? _response;

    protected override async Task OnInitializedAsync()
    {
        _searchService.OnSearch += OnSearchExecute;
        _response = await _searchService.GetSearchResultAsync();
    }

    public void Dispose()
    {
        _searchService.OnSearch -= OnSearchExecute;
    }

    private async void OnSearchExecute()
    {
        _response = await _searchService.GetSearchResultAsync();
        StateHasChanged();
    }

}